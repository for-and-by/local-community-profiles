{
  "version": 3,
  "sources": ["../../../app/components/inputs/image.tsx", "../../../app/components/fields/image-field.tsx"],
  "sourcesContent": ["import React, { useEffect, useRef, useState } from \"react\";\n\nimport { useAsyncAction } from \"~/hooks/use-async-action\";\n\nimport Wrapper from \"~/components/inputs/wrapper\";\n\nimport { Warning, useWarning } from \"~/components/composites/warning\";\nimport Toast from \"~/components/regions/toast\";\nimport type { FieldError } from \"react-hook-form\";\nimport { parseFileAsBase64 } from \"~/lib/image\";\n\ninterface Props {\n  onUpload?: (image: string) => void;\n  onRemove?: () => void;\n  error?: FieldError;\n  value?: string;\n  placeholder?: string;\n}\n\nexport default function ImageInput({\n  onUpload,\n  onRemove,\n  value,\n  error,\n  placeholder,\n}: Props) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [image, setImage] = useState(value);\n  useEffect(() => {\n    setImage(value);\n  }, [value]);\n\n  const [isShow, { showWarning, hideWarning, confirmWarning }] = useWarning(\n    () => {\n      onRemove?.();\n      setImage(undefined);\n      if (inputRef.current) inputRef.current.value = \"\";\n    }\n  );\n\n  const { isLoading, handleAsyncAction: handleProcessFile } = useAsyncAction({\n    action: parseFileAsBase64,\n    onSuccess: (data) => {\n      if (onUpload) onUpload(data);\n      setImage(data);\n    },\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event?.target?.files?.[0];\n    if (file) handleProcessFile(file);\n  };\n\n  const handleUpload = () => {\n    inputRef?.current?.click();\n  };\n\n  return (\n    <>\n      <Wrapper error={error}>\n        <Toast content=\"Processing Image...\" show={isLoading} />\n        {!image ? (\n          <div\n            className=\"flex h-40 flex-grow flex-col items-center justify-center space-y-4 hover:cursor-pointer\"\n            onClick={handleUpload}\n          >\n            <i className=\"icon icon-image before:text-5xl before:text-gray-400\" />\n            <p className=\"text-gray-400\">{placeholder}</p>\n          </div>\n        ) : (\n          <div className=\"relative h-40 w-full\">\n            <div className=\"absolute -inset-3 overflow-hidden rounded-sm\">\n              <img\n                src={image}\n                alt=\"User's Upload\"\n                className=\"h-full w-full object-cover\"\n              />\n            </div>\n            <div className=\"absolute -inset-1\">\n              <div className=\"absolute right-0 top-0 flex space-x-2\">\n                <button className=\"btn btn-white\" onClick={handleUpload}>\n                  <i className=\"btn-icon icon icon-save-over\" />\n                </button>\n                <Warning.Trigger className=\"btn btn-white\" onShow={showWarning}>\n                  <i className=\"btn-icon icon icon-trash before:text-red-600\" />\n                </Warning.Trigger>\n              </div>\n            </div>\n          </div>\n        )}\n        <input\n          ref={inputRef}\n          type=\"file\"\n          accept=\"image/png,image/jpeg\"\n          className=\"hidden\"\n          onChange={handleChange}\n        />\n      </Wrapper>\n      <Warning.Panel\n        heading=\"Remove Image\"\n        body=\"Are you sure you want to remove this image?\"\n        isShow={isShow}\n        onHide={hideWarning}\n        onConfirm={confirmWarning}\n      />\n    </>\n  );\n}\n", "import React from \"react\";\nimport { useController, useFormContext } from \"react-hook-form\";\n\nimport { useFilterTypes } from \"~/hooks/filter/use-filter-types\";\n\nimport ImageInput from \"~/components/inputs/image\";\n\nexport default function ImageField() {\n  const { control, resetField, getValues } = useFormContext();\n  const type = useFilterTypes(getValues(\"type\"));\n\n  const { field, fieldState } = useController({\n    name: \"image\",\n    control,\n    rules: {\n      required: {\n        value: !!type?.image_required,\n        message: \"An image is required for this type of report\",\n      },\n    },\n  });\n\n  return (\n    <ImageInput\n      placeholder={\n        type?.image_required\n          ? \"Upload a photo (required)\"\n          : \"Upload a photo (optional)\"\n      }\n      value={field.value}\n      onUpload={(image) => field.onChange(image)}\n      onRemove={() => resetField(\"image\")}\n      error={fieldState.error}\n    />\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAmD;AA2D/C;AAxCW,SAAR,WAA4B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAU;AACR,QAAM,eAAW,qBAAyB,IAAI;AAE9C,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAS,KAAK;AACxC,8BAAU,MAAM;AACd,aAAS,KAAK;AAAA,EAChB,GAAG,CAAC,KAAK,CAAC;AAEV,QAAM,CAAC,QAAQ,EAAE,aAAa,aAAa,eAAe,CAAC,IAAI;AAAA,IAC7D,MAAM;AACJ;AACA,eAAS,MAAS;AAClB,UAAI,SAAS;AAAS,iBAAS,QAAQ,QAAQ;AAAA,IACjD;AAAA,EACF;AAEA,QAAM,EAAE,WAAW,mBAAmB,kBAAkB,IAAI,eAAe;AAAA,IACzE,QAAQ;AAAA,IACR,WAAW,CAAC,SAAS;AACnB,UAAI;AAAU,iBAAS,IAAI;AAC3B,eAAS,IAAI;AAAA,IACf;AAAA,EACF,CAAC;AAED,QAAM,eAAe,CAAC,UAA+C;AAjDvE;AAkDI,UAAM,QAAO,0CAAO,WAAP,mBAAe,UAAf,mBAAuB;AACpC,QAAI;AAAM,wBAAkB,IAAI;AAAA,EAClC;AAEA,QAAM,eAAe,MAAM;AAtD7B;AAuDI,+CAAU,YAAV,mBAAmB;AAAA,EACrB;AAEA,SACE,sFACE;AAAA,uDAAC,WAAQ,OACP;AAAA,yDAAC,iBAAM,SAAQ,uBAAsB,MAAM,aAA3C;AAAA;AAAA;AAAA;AAAA,aAAsD;AAAA,MACrD,CAAC,QACA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,SAAS;AAAA,UAET;AAAA,+DAAC,OAAE,WAAU,0DAAb;AAAA;AAAA;AAAA;AAAA,mBAAoE;AAAA,YACpE,mDAAC,OAAE,WAAU,iBAAiB,yBAA9B;AAAA;AAAA;AAAA;AAAA,mBAA0C;AAAA;AAAA;AAAA,QAL5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,IAEA,mDAAC,SAAI,WAAU,wBACb;AAAA,2DAAC,SAAI,WAAU,gDACb;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,KAAI;AAAA,YACJ,WAAU;AAAA;AAAA,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QACA,mDAAC,SAAI,WAAU,qBACb,6DAAC,SAAI,WAAU,yCACb;AAAA,6DAAC,YAAO,WAAU,iBAAgB,SAAS,cACzC,6DAAC,OAAE,WAAU,kCAAb;AAAA;AAAA;AAAA;AAAA,iBAA4C,KAD9C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,QAAQ,SAAR,EAAgB,WAAU,iBAAgB,QAAQ,aACjD,6DAAC,OAAE,WAAU,kDAAb;AAAA;AAAA;AAAA;AAAA,iBAA4D,KAD9D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA,KARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,MAEF;AAAA,QAAC;AAAA;AAAA,UACC,KAAK;AAAA,UACL,MAAK;AAAA,UACL,QAAO;AAAA,UACP,WAAU;AAAA,UACV,UAAU;AAAA;AAAA,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA,SArCF;AAAA;AAAA;AAAA;AAAA,WAsCA;AAAA,IACA;AAAA,MAAC,QAAQ;AAAA,MAAR;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL;AAAA,QACA,QAAQ;AAAA,QACR,WAAW;AAAA;AAAA,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA;AAAA,OA9CF;AAAA;AAAA;AAAA;AAAA,SA+CA;AAEJ;;;ACrFI,IAAAA,0BAAA;AAhBW,SAAR,aAA8B;AACnC,QAAM,EAAE,SAAS,YAAY,UAAU,IAAI,eAAe;AAC1D,QAAM,OAAO,eAAe,UAAU,MAAM,CAAC;AAE7C,QAAM,EAAE,OAAO,WAAW,IAAI,cAAc;AAAA,IAC1C,MAAM;AAAA,IACN;AAAA,IACA,OAAO;AAAA,MACL,UAAU;AAAA,QACR,OAAO,CAAC,EAAC,6BAAM;AAAA,QACf,SAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF,CAAC;AAED,SACE;AAAA,IAAC;AAAA;AAAA,MACC,cACE,6BAAM,kBACF,8BACA;AAAA,MAEN,OAAO,MAAM;AAAA,MACb,UAAU,CAAC,UAAU,MAAM,SAAS,KAAK;AAAA,MACzC,UAAU,MAAM,WAAW,OAAO;AAAA,MAClC,OAAO,WAAW;AAAA;AAAA,IATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAEJ;",
  "names": ["import_jsx_dev_runtime"]
}
