{
  "version": 3,
  "sources": ["../../../app/components/atoms/bumper.tsx", "../../../app/hooks/use-style-vars.ts", "../../../app/components/atoms/portal.tsx", "../../../app/hooks/use-query-selector.ts"],
  "sourcesContent": ["import type { ReactNode } from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { useStyleVars } from \"~/hooks/use-style-vars\";\n\ntype Props = {\n  isShow?: boolean;\n  children?: ReactNode;\n  className?: string;\n};\n\nexport function Bumper(props: Props) {\n  const { isShow = true, className, children } = props;\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    if (!isShow) return setHeight(0);\n\n    const { current: node } = ref;\n\n    const observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (mutation.type === \"childList\") {\n          setHeight(node.offsetHeight);\n        }\n      }\n    });\n\n    observer.observe(node, {\n      childList: true,\n      subtree: true,\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [isShow]);\n\n  const style = useStyleVars({\n    height: `${height}px`,\n  });\n\n  return (\n    <div\n      style={style}\n      className=\"h-[--height] overflow-hidden bg-white transition-all duration-300\"\n    >\n      <div ref={ref} className={className}>\n        {children}\n      </div>\n    </div>\n  );\n}\n", "import type { CSSProperties } from \"react\";\nimport { useMemo } from \"react\";\n\ntype Vars = Record<string, string>;\n\nexport function useStyleVars(vars: Vars, deps?: any[]) {\n  return useMemo(() => {\n    return Object.keys(vars).reduce((style, key) => {\n      if (!vars[key]) return style;\n      return Object.assign(style, { [`--${key}`]: vars[key] });\n    }, {} as CSSProperties);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps ?? Object.values(vars));\n}\n", "import type { ReactNode } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport useQuerySelector from \"~/hooks/use-query-selector\";\n\ntype Props = {\n  children?: ReactNode;\n  selector?: string;\n};\n\nexport function Portal(props: Props) {\n  const { children, selector = \"body\" } = props;\n  const parent = useQuerySelector(selector);\n\n  if (!parent) return null;\n  return createPortal(children, parent);\n}\n", "import { useEffect, useState } from \"react\";\n\nexport default function useQuerySelector(selector: string) {\n  const [ref, setRef] = useState<Element | null>(null);\n\n  useEffect(() => {\n    if (!ref) {\n      setRef(document.querySelector(selector));\n    }\n    //\teslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return ref;\n}\n"],
  "mappings": ";;;;;;;;;;AACA,IAAAA,gBAA4C;;;ACA5C,mBAAwB;AAIjB,SAAS,aAAa,MAAY,MAAc;AACrD,aAAO,sBAAQ,MAAM;AACnB,WAAO,OAAO,KAAK,IAAI,EAAE,OAAO,CAAC,OAAO,QAAQ;AAC9C,UAAI,CAAC,KAAK;AAAM,eAAO;AACvB,aAAO,OAAO,OAAO,OAAO,EAAE,CAAC,KAAK,QAAQ,KAAK,KAAK,CAAC;AAAA,IACzD,GAAG,CAAC,CAAkB;AAAA,EAExB,GAAG,sBAAQ,OAAO,OAAO,IAAI,CAAC;AAChC;;;ADqCM;AAvCC,SAAS,OAAO,OAAc;AACnC,QAAM,EAAE,SAAS,MAAM,WAAW,SAAS,IAAI;AAE/C,QAAM,UAAM,sBAAuB,IAAI;AACvC,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,CAAC;AAEtC,+BAAU,MAAM;AACd,QAAI,CAAC,IAAI;AAAS;AAClB,QAAI,CAAC;AAAQ,aAAO,UAAU,CAAC;AAE/B,UAAM,EAAE,SAAS,KAAK,IAAI;AAE1B,UAAM,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACnD,iBAAW,YAAY,WAAW;AAChC,YAAI,SAAS,SAAS,aAAa;AACjC,oBAAU,KAAK,YAAY;AAAA,QAC7B;AAAA,MACF;AAAA,IACF,CAAC;AAED,aAAS,QAAQ,MAAM;AAAA,MACrB,WAAW;AAAA,MACX,SAAS;AAAA,IACX,CAAC;AAED,WAAO,MAAM;AACX,eAAS,WAAW;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,MAAM,CAAC;AAEX,QAAM,QAAQ,aAAa;AAAA,IACzB,QAAQ,GAAG;AAAA,EACb,CAAC;AAED,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,WAAU;AAAA,MAEV,6DAAC,SAAI,KAAU,WACZ,YADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,IANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAEJ;;;AEtDA,uBAA6B;;;ACD7B,IAAAC,gBAAoC;AAErB,SAAR,iBAAkC,UAAkB;AACzD,QAAM,CAAC,KAAK,MAAM,QAAI,wBAAyB,IAAI;AAEnD,+BAAU,MAAM;AACd,QAAI,CAAC,KAAK;AACR,aAAO,SAAS,cAAc,QAAQ,CAAC;AAAA,IACzC;AAAA,EAEF,GAAG,CAAC,CAAC;AAEL,SAAO;AACT;;;ADHO,SAAS,OAAO,OAAc;AACnC,QAAM,EAAE,UAAU,WAAW,OAAO,IAAI;AACxC,QAAM,SAAS,iBAAiB,QAAQ;AAExC,MAAI,CAAC;AAAQ,WAAO;AACpB,aAAO,+BAAa,UAAU,MAAM;AACtC;",
  "names": ["import_react", "import_react"]
}
