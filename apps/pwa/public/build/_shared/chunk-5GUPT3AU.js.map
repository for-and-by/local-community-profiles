{
  "version": 3,
  "sources": ["../../../app/utils/json.ts", "../../../app/lib/zustand.ts", "../../../app/hooks/reports/use-reports-store.ts", "../../../app/hooks/reports/use-report-open.ts"],
  "sourcesContent": ["export function json<T>(value: string | null): T | undefined {\n  try {\n    return value === \"undefined\" ? undefined : JSON.parse(value ?? \"\");\n  } catch {\n    console.log(\"Couldn't not parse as JSON:\", { value });\n    return undefined;\n  }\n}\n\nexport function stringifyJSON(value?: object) {\n  try {\n    return value\n      ? JSON.stringify(value, (key, value) => {\n          if (value instanceof Set) {\n            return {\n              __type: \"set\",\n              set: Array.from(value),\n            };\n          }\n          if (value instanceof Map) {\n            return {\n              __type: \"map\",\n              map: Object.fromEntries(value),\n            };\n          }\n          return value;\n        })\n      : undefined;\n  } catch (error) {\n    console.log(\"Could not serialize JSON: \", value);\n    return undefined;\n  }\n}\n\nexport function parseJSON(value?: string) {\n  try {\n    return value\n      ? JSON.parse(value ?? \"\", (key, value) => {\n          if (!(typeof value === \"object\" && value.hasOwnProperty(\"__type\"))) {\n            return value;\n          }\n          if (value.__type == \"set\") {\n            return new Set(value.set);\n          }\n          if (value.__type == \"map\") {\n            return new Map(Object.entries(value.map));\n          }\n          return value;\n        })\n      : undefined;\n  } catch (error) {\n    console.warn(\"Could not parse as JSON: \", value);\n    console.warn(error);\n    return undefined;\n  }\n}\n", "import { parseJSON, stringifyJSON } from \"~/utils/json\";\nimport type { PersistStorage } from \"zustand/middleware\";\n\nexport function createSerializableStorage<State>(): PersistStorage<State> {\n  return {\n    getItem: (name) => {\n      let state = { state: {} } as { state: State };\n      const storedItem = localStorage.getItem(name);\n      if (storedItem) state = parseJSON(storedItem);\n      return state;\n    },\n    setItem: (name, newValue) => {\n      const storedItem = stringifyJSON(newValue);\n      if (storedItem) localStorage.setItem(name, storedItem);\n    },\n    removeItem: (name) => localStorage.removeItem(name),\n  };\n}\n", "import type { Report } from \"@safer-streets/db\";\nimport type { StateCreator } from \"zustand\";\nimport { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { createSerializableStorage } from \"~/lib/zustand\";\n\ninterface State {\n  opened: Set<Report[\"content_id\"]>;\n  voted: Map<Report[\"id\"], 1 | 0 | -1>;\n}\n\ninterface Actions {\n  open: (id: Report[\"content_id\"]) => void;\n  voteUp: (id: Report[\"id\"]) => void;\n  voteDown: (id: Report[\"id\"]) => void;\n  voteClear: (id: Report[\"id\"]) => void;\n}\n\ninterface Store extends Actions, State {}\n\nconst initialState: State = {\n  opened: new Set(),\n  voted: new Map(),\n};\n\nconst store: StateCreator<Store, [[\"zustand/persist\", unknown]]> = (set) => ({\n  ...initialState,\n  open: (id) => {\n    if (!id) return;\n\n    set((prev) => {\n      return {\n        opened: new Set(prev?.opened).add(id),\n        voted: new Map(prev?.voted).set(id, 0),\n      };\n    });\n  },\n  voteUp: (id) => {\n    if (!id) return;\n    set((prev) => ({\n      voted: new Map(prev?.voted).set(id, 1),\n    }));\n  },\n  voteDown: (id) => {\n    if (!id) return;\n    set((prev) => ({\n      voted: new Map(prev?.voted).set(id, -1),\n    }));\n  },\n  voteClear: (id) => {\n    if (!id) return;\n    if (!id) return;\n    set((prev) => ({\n      voted: new Map(prev?.voted).set(id, 0),\n    }));\n  },\n});\n\nexport const useReportStore = create<Store>()(\n  persist(store, {\n    name: \"reports\",\n    storage: createSerializableStorage(),\n  })\n);\n", "import { useReportStore } from \"~/hooks/reports/use-reports-store\";\n\nexport function useReportOpen() {\n  const opened = useReportStore((state) => state.opened);\n  const open = useReportStore((state) => state.open);\n\n  return [opened, open] as [typeof opened, typeof open];\n}\n"],
  "mappings": "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",
  "names": ["value"]
}
