{
  "version": 3,
  "sources": ["../../../app/hooks/filter/use-filter-severities.ts", "../../../app/components/inputs/select.tsx", "../../../app/components/fields/severity-field.tsx", "../../../app/components/fields/type-field.tsx", "../../../app/utils/string.ts", "../../../app/components/fields/custom-field.tsx", "../../../app/components/inputs/textarea.tsx", "../../../app/components/fields/details-field.tsx"],
  "sourcesContent": ["import { useFilterStore } from \"~/hooks/filter/use-filter-store\";\nimport type { Severity } from \"@safer-streets/db\";\nimport { useEffect, useState } from \"react\";\n\nexport function useFilterSeverities(): [\n  Severity[],\n  (handle?: string) => Severity\n];\nexport function useFilterSeverities(handle: string): Severity;\n\nexport function useFilterSeverities(handle?: string) {\n  const { severities } = useFilterStore();\n\n  function getSeverity(handle?: string) {\n    return severities.find((severity) => {\n      return severity.handle === handle;\n    });\n  }\n\n  const [severity, setSeverity] = useState(getSeverity(handle));\n\n  useEffect(() => {\n    setSeverity(getSeverity(handle));\n    //\teslint-disable-next-line react-hooks/exhaustive-deps\n  }, [handle]);\n\n  return handle ? severity : [severities, getSeverity];\n}\n", "import type { ComponentProps } from \"react\";\nimport React, { forwardRef } from \"react\";\n\nimport Wrapper from \"~/components/inputs/wrapper\";\nimport type { FieldError } from \"react-hook-form\";\n\ninterface Props extends ComponentProps<\"select\"> {\n  label: string;\n  options?: {\n    value: string;\n    label: string;\n  }[];\n  loading?: boolean;\n  placeholder?: string;\n  error?: FieldError;\n}\n\nconst Select = forwardRef<HTMLSelectElement, Props>(\n  ({ label, options, name, loading, placeholder, error, ...props }, ref) => {\n    return (\n      <Wrapper label={label} name={name} error={error}>\n        <select\n          className=\"flex-grow appearance-none bg-transparent focus:outline-none\"\n          name={name}\n          {...props}\n          ref={ref}\n        >\n          {loading ? (\n            <option disabled hidden value=\"\">\n              {placeholder}\n            </option>\n          ) : (\n            <option disabled hidden value=\"\">\n              Please select...\n            </option>\n          )}\n          {options?.map((option) => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n        {loading ? (\n          <i className=\"icon icon-is-spinning icon-circle-anim z-20 text-gray-700\" />\n        ) : (\n          <i className=\"icon icon-arrow-down icon-sm absolute right-4 top-1/2 -translate-y-1/2 text-gray-700\" />\n        )}\n      </Wrapper>\n    );\n  }\n);\n\nSelect.displayName = \"Select\";\n\nexport default Select;\n", "import React from \"react\";\nimport { useController, useFormContext } from \"react-hook-form\";\n\nimport { useFilterSeverities } from \"~/hooks/filter/use-filter-severities\";\n\nimport Select from \"~/components/inputs/select\";\n\nexport default function SeverityField() {\n  const [severities] = useFilterSeverities();\n\n  const { control } = useFormContext();\n  const {\n    field,\n    fieldState: { error },\n  } = useController({\n    name: \"severity\",\n    control,\n    rules: {\n      required: \"A severity is required\",\n    },\n  });\n\n  return (\n    <Select\n      label=\"Severity\"\n      options={severities?.map((result) => ({\n        label: result.title,\n        value: result.handle,\n      }))}\n      error={error}\n      {...field}\n    />\n  );\n}\n", "import React from \"react\";\nimport { useController, useFormContext } from \"react-hook-form\";\n\nimport { useFilterTypes } from \"~/hooks/filter/use-filter-types\";\n\nimport Select from \"~/components/inputs/select\";\n\nexport default function TypeField() {\n  const [types] = useFilterTypes();\n\n  const { control } = useFormContext();\n  const {\n    field,\n    fieldState: { error },\n  } = useController({\n    name: \"type\",\n    control,\n    rules: {\n      required: \"A report type is required\",\n    },\n  });\n\n  return (\n    <Select\n      label=\"Type\"\n      options={types?.map((result) => ({\n        label: result.title,\n        value: result.handle,\n      }))}\n      error={error}\n      {...field}\n    />\n  );\n}\n", "export function truncateString(string?: string, length = 24) {\n  if (!string) return \"\";\n  if (string.length < length) return string;\n  return string.slice(0, length) + \"...\";\n}\n\nexport function capitaliseString(string: string) {\n  const head = string.charAt(0);\n  const tail = string.slice(1);\n\n  return head.toUpperCase() + tail.toLowerCase();\n}\n", "import React from \"react\";\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\";\n\nimport { useFilterTypes } from \"~/hooks/filter/use-filter-types\";\nimport { capitaliseString } from \"~/utils/string\";\n\nimport Text from \"~/components/inputs/text\";\n\nexport default function CustomField() {\n  const { control } = useFormContext();\n  const typeValue = useWatch({ name: \"type\" });\n  const type = useFilterTypes(typeValue);\n\n  if (!type?.custom_fields) return null;\n\n  return (\n    <>\n      {Object.keys(type?.custom_fields).map((key) => (\n        <Controller\n          key={key}\n          control={control}\n          name={`custom.${key}`}\n          render={({ field, fieldState: { error } }) => (\n            <Text {...field} label={capitaliseString(key)} error={error} />\n          )}\n          defaultValue=\"\"\n        />\n      ))}\n    </>\n  );\n}\n", "import React from \"react\";\nimport Wrapper from \"~/components/inputs/wrapper\";\nimport type { FieldError } from \"react-hook-form\";\n\ninterface Props extends React.ComponentPropsWithRef<\"textarea\"> {\n  icon?: string;\n  label?: string;\n  error?: FieldError;\n}\n\n// eslint-disable-next-line react/display-name\nconst Textarea = React.forwardRef<HTMLTextAreaElement, Props>(\n  ({ icon = undefined, label, name, error, ...props }, ref) => (\n    <Wrapper label={label} name={name ?? \"\"} align=\"top\" error={error}>\n      {icon && <i className={`icon ${icon}`} />}\n      <textarea\n        className=\"flex-grow bg-transparent focus:outline-none\"\n        ref={ref}\n        name={name}\n        {...props}\n      />\n    </Wrapper>\n  )\n);\n\nexport default Textarea;\n", "import React from \"react\";\nimport Textarea from \"~/components/inputs/textarea\";\nimport { useController, useFormContext } from \"react-hook-form\";\n\nexport default function DetailsField() {\n  const { control } = useFormContext();\n  const {\n    field,\n    fieldState: { error },\n  } = useController({\n    name: \"details\",\n    control,\n    rules: {\n      required: \"A brief description of the report is required\",\n    },\n  });\n\n  return <Textarea label=\"Details\" {...field} error={error} />;\n}\n"],
  "mappings": "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",
  "names": ["handle", "severity", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime"]
}
